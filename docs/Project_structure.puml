@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.jugendhilfe.jugendhilfe.domain.KindDetail",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1528762891 { 
   	label=jugendhilfe
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_675274072 { 
   	label=jugendhilfe
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Dokumentation679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Dokumentation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dokumentationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dokumentationdatum: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dokumentationtext: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dokumentationtyp: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kind: Kind [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   optionenDokumentationTyp: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Kind679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Kind</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   auszug_datum: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dokumentationen: List&lt;Dokumentation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   einzug_datum: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jugendamt: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindDetails: List&lt;KindDetail&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindGeschlecht: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindNachname: String [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindVorname: String [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sorgeberechtigerSet: Set&lt;Sorgeberechtiger&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSorgeBerechtigter(sorgeberechtiger: Sorgeberechtiger)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

KindDetail679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)KindDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   aktiv: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   auszug: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   einzug: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindDetailId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindDetailKind: Kind [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kindDetailWohngruppe: Wohngruppe [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Mitarbeiter679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Mitarbeiter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   anrede: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterDayOfBirth: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterEducation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterFurtherEducations: List&lt;FurtherEducation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterJob: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterLanguages: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterPlaceOfBirth: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterTelefon: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeitermitarbeiterDetails: List&lt;MitarbeiterDetail&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nachname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   optionenAnredeMitarbeiter: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ort: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   plz: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   strasse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   vorname: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MitarbeiterDetail679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MitarbeiterDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   aktiv: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   einsatzBeginn: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   einsatzEnde: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterDetailId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterDetailMitarbeiter: Mitarbeiter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterDetailWohngruppe: Wohngruppe [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Sorgeberechtiger679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Sorgeberechtiger</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   geburtsdatum: LocalDate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   kinderSet: Set&lt;Kind&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sorgeberechtigerId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sorgeberechtigerNachname: String [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sorgeberechtigerVorname: String [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addKind(kind: Kind)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Wohngruppe679482583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Wohngruppe</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   anzahlPlaetze: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mitarbeiterDetailList: List&lt;MitarbeiterDetail&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ort: String [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   plz: String [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   strasse: String [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tagessatz: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wohngruppenId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wohngruppenName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Dokumentation679482583 -> Kind679482583[label="kind
[0..1]"];
Kind679482583 -> Dokumentation679482583[label="dokumentationen
[0..*]"];
Kind679482583 -> KindDetail679482583[label="kindDetails
[0..*]"];
Kind679482583 -> Sorgeberechtiger679482583[label="sorgeberechtigerSet
[0..*]"];
KindDetail679482583 -> Kind679482583[label="kindDetailKind
[0..1]"];
KindDetail679482583 -> Wohngruppe679482583[label="kindDetailWohngruppe
[0..1]"];
MitarbeiterDetail679482583 -> Mitarbeiter679482583[label="mitarbeiterDetailMitarbeiter
[0..1]"];
MitarbeiterDetail679482583 -> Wohngruppe679482583[label="mitarbeiterDetailWohngruppe
[0..1]"];
Sorgeberechtiger679482583 -> Kind679482583[label="kinderSet
[0..*]"];
Wohngruppe679482583 -> MitarbeiterDetail679482583[label="mitarbeiterDetailList
[0..*]"];
    
}
@enduml